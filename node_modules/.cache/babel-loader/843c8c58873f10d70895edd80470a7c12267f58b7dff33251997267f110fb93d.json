{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\contexts\\\\RegimenContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useState, useContext } from \"react\";\n\n// const RegimenContext = createContext();\n\n// export const RegimenProvider = ({ children }) => {\n//   const [regimenDetails, setRegimenDetails] = useState(null);\n\n//   return (\n//     <RegimenContext.Provider value={{ regimenDetails, setRegimenDetails }}>\n//       {children}\n//     </RegimenContext.Provider>\n//   );\n// };\n\n// export const useRegimen = () => useContext(RegimenContext);\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegimenContext = /*#__PURE__*/createContext();\nexport const RegimenProvider = ({\n  children\n}) => {\n  _s();\n  const [Data, setData] = useState(apiData); // Initialize with your initial data\n  // Other context-related logic...\n\n  return /*#__PURE__*/_jsxDEV(RegimenContext.Provider, {\n    value: {\n      Data,\n      setData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(RegimenProvider, \"7WAud1utlqhg+1CzDS7AmbPT84Q=\");\n_c = RegimenProvider;\nexport const useRegimen = () => {\n  _s2();\n  const context = useContext(RegimenContext);\n  if (!context) {\n    throw new Error(\"useRegimen must be used within a RegimenProvider\");\n  }\n  return context;\n};\n_s2(useRegimen, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"RegimenProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","RegimenContext","RegimenProvider","children","_s","Data","setData","apiData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRegimen","_s2","context","Error","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/contexts/RegimenContext.js"],"sourcesContent":["// import React, { createContext, useState, useContext } from \"react\";\r\n\r\n// const RegimenContext = createContext();\r\n\r\n// export const RegimenProvider = ({ children }) => {\r\n//   const [regimenDetails, setRegimenDetails] = useState(null);\r\n\r\n//   return (\r\n//     <RegimenContext.Provider value={{ regimenDetails, setRegimenDetails }}>\r\n//       {children}\r\n//     </RegimenContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useRegimen = () => useContext(RegimenContext);\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst RegimenContext = createContext();\r\n\r\nexport const RegimenProvider = ({ children }) => {\r\n  const [Data, setData] = useState(apiData); // Initialize with your initial data\r\n  // Other context-related logic...\r\n\r\n  return (\r\n    <RegimenContext.Provider value={{ Data, setData }}>\r\n      {children}\r\n    </RegimenContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRegimen = () => {\r\n  const context = useContext(RegimenContext);\r\n  if (!context) {\r\n    throw new Error(\"useRegimen must be used within a RegimenProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACS,OAAO,CAAC,CAAC,CAAC;EAC3C;;EAEA,oBACEP,OAAA,CAACC,cAAc,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC/CA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACT,EAAA,CATWF,eAAe;AAAAY,EAAA,GAAfZ,eAAe;AAW5B,OAAO,MAAMa,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC9B,MAAMC,OAAO,GAAGpB,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAI,CAACgB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,UAAU;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}