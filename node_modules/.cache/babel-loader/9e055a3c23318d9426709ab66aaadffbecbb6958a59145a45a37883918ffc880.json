{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import \"./style.css\";\n\n// function Table({ data, selectedOption }) {\n//   return (\n//     <table className=\"medictions-table\">\n//       <thead>\n//         <tr>\n//           <th className=\"checkboxCell\">\n//             <input type=\"checkbox\" />{\" \"}\n//           </th>\n//           <th style={{ width: \"240px\" }}>Mediaction</th>\n//           <th style={{ width: \"130px\" }}>Dose</th>\n//           <th style={{ width: \"160px\" }}>Route</th>\n//           <th>Instructions</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {selectedOption &&\n//           data[selectedOption].map((item, index) => (\n//             <tr key={index}>\n//               <td className=\"checkboxCell\">\n//                 <input type=\"checkbox\" />\n//               </td>\n//               {Object.values(item).map((value, colIndex) => (\n//                 <td key={colIndex}>{value}</td>\n//               ))}\n//             </tr>\n//           ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default Table;\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  data,\n  setData\n}) {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleCheckboxChange = index => {\n    const updatedData = [...data[selectedOption]];\n    updatedData.splice(index, 1);\n    if (updatedData.length === 0) {\n      setSelectedOption(null);\n    } else {\n      setData({\n        ...data,\n        [selectedOption]: updatedData\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"medictions-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"checkboxCell\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => setSelectedOption(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"240px\"\n          },\n          children: \"Mediaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"130px\"\n          },\n          children: \"Dose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"160px\"\n          },\n          children: \"Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: selectedOption !== null && data[selectedOption].map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"checkboxCell\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCheckboxChange(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), Object.values(item).map((value, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Table","data","setData","_s","selectedOption","setSelectedOption","handleCheckboxChange","index","updatedData","splice","length","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","item","Object","values","value","colIndex","_c","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/components/Table/Table.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import \"./style.css\";\r\n\r\n// function Table({ data, selectedOption }) {\r\n//   return (\r\n//     <table className=\"medictions-table\">\r\n//       <thead>\r\n//         <tr>\r\n//           <th className=\"checkboxCell\">\r\n//             <input type=\"checkbox\" />{\" \"}\r\n//           </th>\r\n//           <th style={{ width: \"240px\" }}>Mediaction</th>\r\n//           <th style={{ width: \"130px\" }}>Dose</th>\r\n//           <th style={{ width: \"160px\" }}>Route</th>\r\n//           <th>Instructions</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {selectedOption &&\r\n//           data[selectedOption].map((item, index) => (\r\n//             <tr key={index}>\r\n//               <td className=\"checkboxCell\">\r\n//                 <input type=\"checkbox\" />\r\n//               </td>\r\n//               {Object.values(item).map((value, colIndex) => (\r\n//                 <td key={colIndex}>{value}</td>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// export default Table;\r\nimport React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Table({ data, setData }) {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    const updatedData = [...data[selectedOption]];\r\n    updatedData.splice(index, 1);\r\n    if (updatedData.length === 0) {\r\n      setSelectedOption(null);\r\n    } else {\r\n      setData({ ...data, [selectedOption]: updatedData });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <table className=\"medictions-table\">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"checkboxCell\">\r\n            <input type=\"checkbox\" onChange={() => setSelectedOption(null)} />{\" \"}\r\n          </th>\r\n          <th style={{ width: \"240px\" }}>Mediaction</th>\r\n          <th style={{ width: \"130px\" }}>Dose</th>\r\n          <th style={{ width: \"160px\" }}>Route</th>\r\n          <th>Instructions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {selectedOption !== null &&\r\n          data[selectedOption].map((item, index) => (\r\n            <tr key={index}>\r\n              <td className=\"checkboxCell\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={() => handleCheckboxChange(index)}\r\n                />\r\n              </td>\r\n              {Object.values(item).map((value, colIndex) => (\r\n                <td key={colIndex}>{value}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMS,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAMC,WAAW,GAAG,CAAC,GAAGP,IAAI,CAACG,cAAc,CAAC,CAAC;IAC7CI,WAAW,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC5B,IAAIC,WAAW,CAACE,MAAM,KAAK,CAAC,EAAE;MAC5BL,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACLH,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAE,CAACG,cAAc,GAAGI;MAAY,CAAC,CAAC;IACrD;EACF,CAAC;EAED,oBACET,OAAA;IAAOY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBACjCb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAIY,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC1Bb,OAAA;YAAOc,IAAI,EAAC,UAAU;YAACC,QAAQ,EAAEA,CAAA,KAAMT,iBAAiB,CAAC,IAAI;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAAC,GAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eACLnB,OAAA;UAAIoB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAR,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CnB,OAAA;UAAIoB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAR,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCnB,OAAA;UAAIoB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAR,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCnB,OAAA;UAAAa,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRnB,OAAA;MAAAa,QAAA,EACGR,cAAc,KAAK,IAAI,IACtBH,IAAI,CAACG,cAAc,CAAC,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEf,KAAK,kBACnCR,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAIY,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC1Bb,OAAA;YACEc,IAAI,EAAC,UAAU;YACfC,QAAQ,EAAEA,CAAA,KAAMR,oBAAoB,CAACC,KAAK;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EACJK,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC,CAACD,GAAG,CAAC,CAACI,KAAK,EAAEC,QAAQ,kBACvC3B,OAAA;UAAAa,QAAA,EAAoBa;QAAK,GAAhBC,QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC/B,CAAC;MAAA,GATKX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACf,EAAA,CA5CQH,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA8Cd,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}