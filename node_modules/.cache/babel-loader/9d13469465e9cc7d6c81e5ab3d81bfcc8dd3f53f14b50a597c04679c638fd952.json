{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\components\\\\DropDownMenu\\\\DropDownMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport RegimenDetails from \"components/redimenDetails/RegimenDetails\";\nimport { useRegimenDetails } from \"contexts/RegimenDetailsContext \";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regimens = [\"CHOP: Protocol for Non Hodgkin Lymphoma\", \"AC - Regimen for Non-Metastatic, Locally-Advanced Breast Cancer. Before or after Taxol\", \"CMF-Breast Cancer Regimen\", \"COP - Regimen for Non-Metastatic Non Hodgkin Lymphoma\"];\nexport default function DropDownMenu() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(\"none\");\n  const dropdownRef = useRef(null);\n  const {\n    newRegimenDetails\n  } = useRegimenDetails();\n  useEffect(() => {\n    newRegimenDetails && setSelectedOption(newRegimenDetails.regimenName);\n  }, [newRegimenDetails]);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regimens-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-header ${isOpen ? \"open\" : \"\"}`,\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedOption === \"none\" ? \"None\" : selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `arrow ${isOpen ? \"up\" : \"down\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-list\",\n        children: regimens.map((regimen, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-option\",\n          onClick: () => handleOptionSelect(regimen),\n          children: regimen\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedOption !== \"none\" && /*#__PURE__*/_jsxDEV(RegimenDetails, {\n      selectedOption: selectedOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(DropDownMenu, \"UgmFIbM+BqPuW8Vhddz3Dgc96jE=\", false, function () {\n  return [useRegimenDetails];\n});\n_c = DropDownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropDownMenu\");","map":{"version":3,"names":["React","useEffect","useRef","useState","RegimenDetails","useRegimenDetails","jsxDEV","_jsxDEV","regimens","DropDownMenu","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","dropdownRef","newRegimenDetails","regimenName","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","toggleDropdown","handleOptionSelect","option","className","children","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","regimen","index","_c","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/components/DropDownMenu/DropDownMenu.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport RegimenDetails from \"components/redimenDetails/RegimenDetails\";\r\nimport { useRegimenDetails } from \"contexts/RegimenDetailsContext \";\r\n\r\nconst regimens = [\r\n  \"CHOP: Protocol for Non Hodgkin Lymphoma\",\r\n  \"AC - Regimen for Non-Metastatic, Locally-Advanced Breast Cancer. Before or after Taxol\",\r\n  \"CMF-Breast Cancer Regimen\",\r\n  \"COP - Regimen for Non-Metastatic Non Hodgkin Lymphoma\",\r\n];\r\n\r\nexport default function DropDownMenu() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"none\");\r\n  const dropdownRef = useRef(null);\r\n  const { newRegimenDetails } = useRegimenDetails();\r\n  useEffect(() => {\r\n    newRegimenDetails && setSelectedOption(newRegimenDetails.regimenName);\r\n  }, [newRegimenDetails]);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"regimens-details-container\">\r\n      <div className=\"dropdown-container\" ref={dropdownRef}>\r\n        <div\r\n          className={`dropdown-header ${isOpen ? \"open\" : \"\"}`}\r\n          onClick={toggleDropdown}\r\n        >\r\n          <span>{selectedOption === \"none\" ? \"None\" : selectedOption}</span>\r\n\r\n          <span className={`arrow ${isOpen ? \"up\" : \"down\"}`}></span>\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"dropdown-list\">\r\n            {regimens.map((regimen, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"dropdown-option\"\r\n                onClick={() => handleOptionSelect(regimen)}\r\n              >\r\n                {regimen}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {selectedOption !== \"none\" && (\r\n        <RegimenDetails selectedOption={selectedOption} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}