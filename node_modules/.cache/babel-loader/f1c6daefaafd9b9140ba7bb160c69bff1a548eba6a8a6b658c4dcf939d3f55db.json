{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\components\\\\DropDownMenu\\\\DropDownMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport RegimenDetails from \"redimenDetails/RegimenDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst regimens = [\"CHOP: Protocol for Non Hodgkin Lymphoma\", \"AC - Regimen for Non-Metastatic, Locally-Advanced Breast Cancer. Before or after Taxol\", \"CMF-Breast Cancer Regimen\", \"COP - Regimen for Non-Metastatic Non Hodgkin Lymphoma\"];\nconst cycleData = {\n  \"COP - Regimen for Non-Metastatic Non Hodgkin Lymphoma\": [{\n    NumOfCycles: 3,\n    CycleCount: 2\n  }]\n  // Add cycle data for other regimens here\n};\nconst Weeks = [\"None\", \"1 Weeks\", \"2 Weeks\", \"3 Weeks\", \"4 Weeks\", \"5 Weeks\", \"6 Weeks\"];\nconst Cycles = [1, 2, 3, 4, 5, 6, 7, 8];\nconst Days = Array.from({\n  length: 28\n}, (_, index) => index + 1);\nconst fieldsNum = [0, 1, 2, 3];\nexport default function DropDownMenu() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(\"none\");\n  const [cycles, setCycles] = useState([]);\n  const [weeks, setWeeks] = useState([]);\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    if (selectedOption && cycleData[selectedOption]) {\n      setCycles(Array.from({\n        length: cycleData[selectedOption][0].CycleCount\n      }, (_, index) => index + 1));\n      setWeeks(Weeks);\n    } else {\n      setCycles([]);\n      setWeeks([]);\n    }\n  }, [selectedOption]);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"regimens-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-header ${isOpen ? \"open\" : \"\"}`,\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedOption === \"none\" ? \"None\" : selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `arrow ${isOpen ? \"up\" : \"down\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-list\",\n        children: regimens.map((regimen, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-option\",\n          onClick: () => handleOptionSelect(regimen),\n          children: regimen\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), selectedOption !== \"none\" && /*#__PURE__*/_jsxDEV(RegimenDetails, {\n      selectedOption: selectedOption,\n      cycles: cycles,\n      weeks: weeks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(DropDownMenu, \"4eou4IHUtp/+UJ0VR3e0CnlkvaA=\");\n_c = DropDownMenu;\nvar _c;\n$RefreshReg$(_c, \"DropDownMenu\");","map":{"version":3,"names":["React","useEffect","useRef","useState","RegimenDetails","jsxDEV","_jsxDEV","regimens","cycleData","NumOfCycles","CycleCount","Weeks","Cycles","Days","Array","from","length","_","index","fieldsNum","DropDownMenu","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","cycles","setCycles","weeks","setWeeks","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","toggleDropdown","handleOptionSelect","option","className","children","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","regimen","_c","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/components/DropDownMenu/DropDownMenu.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport RegimenDetails from \"redimenDetails/RegimenDetails\";\r\n\r\nconst regimens = [\r\n  \"CHOP: Protocol for Non Hodgkin Lymphoma\",\r\n  \"AC - Regimen for Non-Metastatic, Locally-Advanced Breast Cancer. Before or after Taxol\",\r\n  \"CMF-Breast Cancer Regimen\",\r\n  \"COP - Regimen for Non-Metastatic Non Hodgkin Lymphoma\",\r\n];\r\n\r\nconst cycleData = {\r\n  \"COP - Regimen for Non-Metastatic Non Hodgkin Lymphoma\": [\r\n    { NumOfCycles: 3, CycleCount: 2 },\r\n  ],\r\n  // Add cycle data for other regimens here\r\n};\r\n\r\nconst Weeks = [\r\n  \"None\",\r\n  \"1 Weeks\",\r\n  \"2 Weeks\",\r\n  \"3 Weeks\",\r\n  \"4 Weeks\",\r\n  \"5 Weeks\",\r\n  \"6 Weeks\",\r\n];\r\n\r\nconst Cycles = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nconst Days = Array.from({ length: 28 }, (_, index) => index + 1);\r\n\r\nconst fieldsNum = [0, 1, 2, 3];\r\n\r\nexport default function DropDownMenu() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"none\");\r\n  const [cycles, setCycles] = useState([]);\r\n  const [weeks, setWeeks] = useState([]);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedOption && cycleData[selectedOption]) {\r\n      setCycles(\r\n        Array.from(\r\n          { length: cycleData[selectedOption][0].CycleCount },\r\n          (_, index) => index + 1\r\n        )\r\n      );\r\n      setWeeks(Weeks);\r\n    } else {\r\n      setCycles([]);\r\n      setWeeks([]);\r\n    }\r\n  }, [selectedOption]);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"regimens-details-container\">\r\n      <div className=\"dropdown-container\" ref={dropdownRef}>\r\n        <div\r\n          className={`dropdown-header ${isOpen ? \"open\" : \"\"}`}\r\n          onClick={toggleDropdown}\r\n        >\r\n          <span>{selectedOption === \"none\" ? \"None\" : selectedOption}</span>\r\n\r\n          <span className={`arrow ${isOpen ? \"up\" : \"down\"}`}></span>\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"dropdown-list\">\r\n            {regimens.map((regimen, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"dropdown-option\"\r\n                onClick={() => handleOptionSelect(regimen)}\r\n              >\r\n                {regimen}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {selectedOption !== \"none\" && (\r\n        <RegimenDetails\r\n          selectedOption={selectedOption}\r\n          cycles={cycles}\r\n          weeks={weeks}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}