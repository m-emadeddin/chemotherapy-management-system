{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\components\\\\MiniDropMenu\\\\MiniDropMenu.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MiniDropMenu({\n  title,\n  options,\n  defaultValue\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(defaultValue || options[0]);\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    onSelect(option); // Call onSelect with the newly selected option\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-dropdown-container\",\n      ref: dropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mini-dropdown-header ${isOpen ? \"open\" : \"\"}`,\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `arrow ${isOpen ? \"up\" : \"down\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-dropdown-list\",\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-dropdown-option\",\n          onClick: () => handleOptionSelect(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), title === \"fieldsNum\" && selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs-container\",\n      children: Array.from({\n        length: parseInt(selectedOption)\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"day-input\",\n        placeholder: \"hh\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(MiniDropMenu, \"Ot908t2qxS2BwZ1z/W0xKZiJU7g=\");\n_c = MiniDropMenu;\nvar _c;\n$RefreshReg$(_c, \"MiniDropMenu\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","MiniDropMenu","title","options","defaultValue","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","dropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","toggleDropdown","handleOptionSelect","option","onSelect","children","className","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Array","from","length","parseInt","_","type","placeholder","_c","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/components/MiniDropMenu/MiniDropMenu.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function MiniDropMenu({ title, options, defaultValue }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\r\n    defaultValue || options[0]\r\n  );\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n    setIsOpen(false);\r\n    onSelect(option); // Call onSelect with the newly selected option\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mini-dropdown-container\" ref={dropdownRef}>\r\n        <div\r\n          className={`mini-dropdown-header ${isOpen ? \"open\" : \"\"}`}\r\n          onClick={toggleDropdown}\r\n        >\r\n          <span>{selectedOption}</span>\r\n          <span className={`arrow ${isOpen ? \"up\" : \"down\"}`}></span>\r\n        </div>\r\n        {isOpen && (\r\n          <div className=\"mini-dropdown-list\">\r\n            {options.map((option, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"mini-dropdown-option\"\r\n                onClick={() => handleOptionSelect(option)}\r\n              >\r\n                {option}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {title === \"fieldsNum\" && selectedOption && (\r\n        <div className=\"inputs-container\">\r\n          {Array.from({ length: parseInt(selectedOption) }, (_, index) => (\r\n            <input\r\n              key={index}\r\n              type=\"number\"\r\n              className=\"day-input\"\r\n              placeholder=\"hh\"\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}