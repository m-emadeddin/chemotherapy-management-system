{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useEffect, useState } from \"react\";\n// import \"./style.css\";\n\n// function Table({ data, selectedOption }) {\n//   const [checkedItems, setCheckedItems] = useState({});\n\n//   useEffect(() => {\n//     setCheckedItems({});\n//   }, [selectedOption]);\n//   const handleCheckboxChange = (index) => {\n//     setCheckedItems((prevCheckedItems) => ({\n//       ...prevCheckedItems,\n//       [index]: !prevCheckedItems[index],\n//     }));\n//   };\n//   console.log(checkedItems);\n//   return (\n//     <table className=\"medictions-table\">\n//       <thead>\n//         <tr>\n//           <th className=\"checkboxCell\"></th>\n//           <th style={{ width: \"240px\" }}>Mediaction</th>\n//           <th style={{ width: \"130px\" }}>Dose</th>\n//           <th style={{ width: \"160px\" }}>Route</th>\n//           <th>Instructions</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {selectedOption &&\n//           data[selectedOption].map((item, index) => (\n//             <tr key={index}>\n//               <td className=\"checkboxCell\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={checkedItems[index] || false}\n//                   onChange={() => handleCheckboxChange(index)}\n//                 />\n//               </td>\n//               {Object.values(item).map((value, colIndex) => (\n//                 <td key={colIndex}>{value}</td>\n//               ))}\n//             </tr>\n//           ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default Table;\n\n// Table component\nfunction Table({\n  data,\n  selectedOption,\n  onDeleteRow\n}) {\n  _s();\n  const [checkedItems, setCheckedItems] = useState({});\n  useEffect(() => {\n    setCheckedItems({});\n  }, [selectedOption]);\n  const handleCheckboxChange = index => {\n    setCheckedItems(prevCheckedItems => ({\n      ...prevCheckedItems,\n      [index]: !prevCheckedItems[index]\n    }));\n  };\n  const handleDeleteRow = index => {\n    const newData = data[selectedOption].filter((item, i) => i !== index);\n    onDeleteRow(selectedOption, newData);\n    setCheckedItems(prevCheckedItems => {\n      const updatedCheckedItems = {\n        ...prevCheckedItems\n      };\n      delete updatedCheckedItems[index];\n      return updatedCheckedItems;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"medictions-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"checkboxCell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"240px\"\n          },\n          children: \"Mediaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"130px\"\n          },\n          children: \"Dose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          style: {\n            width: \"160px\"\n          },\n          children: \"Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: selectedOption && data[selectedOption].map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"checkboxCell\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checkedItems[index] || false,\n            onChange: () => handleCheckboxChange(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), Object.values(item).map((value, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: value\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteRow(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"XA9x7HhDIXJhy6UfHvRtfNizbnQ=\");\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Table","data","selectedOption","onDeleteRow","_s","checkedItems","setCheckedItems","useState","useEffect","handleCheckboxChange","index","prevCheckedItems","handleDeleteRow","newData","filter","item","i","updatedCheckedItems","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","type","checked","onChange","Object","values","value","colIndex","onClick","_c","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/components/Table/Table.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import \"./style.css\";\r\n\r\n// function Table({ data, selectedOption }) {\r\n//   const [checkedItems, setCheckedItems] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     setCheckedItems({});\r\n//   }, [selectedOption]);\r\n//   const handleCheckboxChange = (index) => {\r\n//     setCheckedItems((prevCheckedItems) => ({\r\n//       ...prevCheckedItems,\r\n//       [index]: !prevCheckedItems[index],\r\n//     }));\r\n//   };\r\n//   console.log(checkedItems);\r\n//   return (\r\n//     <table className=\"medictions-table\">\r\n//       <thead>\r\n//         <tr>\r\n//           <th className=\"checkboxCell\"></th>\r\n//           <th style={{ width: \"240px\" }}>Mediaction</th>\r\n//           <th style={{ width: \"130px\" }}>Dose</th>\r\n//           <th style={{ width: \"160px\" }}>Route</th>\r\n//           <th>Instructions</th>\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {selectedOption &&\r\n//           data[selectedOption].map((item, index) => (\r\n//             <tr key={index}>\r\n//               <td className=\"checkboxCell\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={checkedItems[index] || false}\r\n//                   onChange={() => handleCheckboxChange(index)}\r\n//                 />\r\n//               </td>\r\n//               {Object.values(item).map((value, colIndex) => (\r\n//                 <td key={colIndex}>{value}</td>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// }\r\n\r\n// export default Table;\r\n\r\n// Table component\r\nfunction Table({ data, selectedOption, onDeleteRow }) {\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n\r\n  useEffect(() => {\r\n    setCheckedItems({});\r\n  }, [selectedOption]);\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    setCheckedItems((prevCheckedItems) => ({\r\n      ...prevCheckedItems,\r\n      [index]: !prevCheckedItems[index],\r\n    }));\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    const newData = data[selectedOption].filter((item, i) => i !== index);\r\n    onDeleteRow(selectedOption, newData);\r\n    setCheckedItems((prevCheckedItems) => {\r\n      const updatedCheckedItems = { ...prevCheckedItems };\r\n      delete updatedCheckedItems[index];\r\n      return updatedCheckedItems;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <table className=\"medictions-table\">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"checkboxCell\"></th>\r\n          <th style={{ width: \"240px\" }}>Mediaction</th>\r\n          <th style={{ width: \"130px\" }}>Dose</th>\r\n          <th style={{ width: \"160px\" }}>Route</th>\r\n          <th>Instructions</th>\r\n          <th></th> {/* New column for delete button */}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {selectedOption &&\r\n          data[selectedOption].map((item, index) => (\r\n            <tr key={index}>\r\n              <td className=\"checkboxCell\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={checkedItems[index] || false}\r\n                  onChange={() => handleCheckboxChange(index)}\r\n                />\r\n              </td>\r\n              {Object.values(item).map((value, colIndex) => (\r\n                <td key={colIndex}>{value}</td>\r\n              ))}\r\n              <td>\r\n                <button onClick={() => handleDeleteRow(index)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}