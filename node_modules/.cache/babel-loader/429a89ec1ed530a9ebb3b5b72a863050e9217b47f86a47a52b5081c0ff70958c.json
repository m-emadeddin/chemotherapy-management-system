{"ast":null,"code":"var _jsxFileName = \"F:\\\\Uni\\\\chemotherapy-management-system\\\\src\\\\components\\\\Table\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table({\n  data,\n  selectedOption,\n  onDeleteCheckedRows\n}) {\n  _s();\n  const [checkedRows, setCheckedRows] = useState([]);\n  const handleCheckboxChange = index => {\n    const isChecked = checkedRows.includes(index);\n    if (isChecked) {\n      setCheckedRows(checkedRows.filter(rowIndex => rowIndex !== index));\n    } else {\n      setCheckedRows([...checkedRows, index]);\n    }\n  };\n  const handleDeleteCheckedRows = () => {\n    onDeleteCheckedRows(checkedRows);\n    setCheckedRows([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteCheckedRows,\n      children: \"Delete Checked Rows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"medictions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"checkboxCell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"240px\"\n            },\n            children: \"Medication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"130px\"\n            },\n            children: \"Dose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"160px\"\n            },\n            children: \"Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: selectedOption && data[selectedOption].map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"checkboxCell\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: checkedRows.includes(index),\n              onChange: () => handleCheckboxChange(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), Object.values(item).map((value, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"/+XL8QaVUhTc6uaQhHMntnNfiro=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Table","data","selectedOption","onDeleteCheckedRows","_s","checkedRows","setCheckedRows","handleCheckboxChange","index","isChecked","includes","filter","rowIndex","handleDeleteCheckedRows","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","map","item","type","checked","onChange","Object","values","value","colIndex","_c","$RefreshReg$"],"sources":["F:/Uni/chemotherapy-management-system/src/components/Table/Table.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Table({ data, selectedOption, onDeleteCheckedRows }) {\r\n  const [checkedRows, setCheckedRows] = useState([]);\r\n\r\n  const handleCheckboxChange = (index) => {\r\n    const isChecked = checkedRows.includes(index);\r\n    if (isChecked) {\r\n      setCheckedRows(checkedRows.filter((rowIndex) => rowIndex !== index));\r\n    } else {\r\n      setCheckedRows([...checkedRows, index]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCheckedRows = () => {\r\n    onDeleteCheckedRows(checkedRows);\r\n    setCheckedRows([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleDeleteCheckedRows}>Delete Checked Rows</button>\r\n      <table className=\"medictions-table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"checkboxCell\"></th>\r\n            <th style={{ width: \"240px\" }}>Medication</th>\r\n            <th style={{ width: \"130px\" }}>Dose</th>\r\n            <th style={{ width: \"160px\" }}>Route</th>\r\n            <th>Instructions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {selectedOption &&\r\n            data[selectedOption].map((item, index) => (\r\n              <tr key={index}>\r\n                <td className=\"checkboxCell\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={checkedRows.includes(index)}\r\n                    onChange={() => handleCheckboxChange(index)}\r\n                  />\r\n                </td>\r\n                {Object.values(item).map((value, colIndex) => (\r\n                  <td key={colIndex}>{value}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}