{"ast":null,"code":"import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };","map":{"version":3,"names":["rectToClientRect","autoPlacement","autoPlacement$1","shift","shift$1","flip","flip$1","size","size$1","hide","hide$1","arrow","arrow$1","inline","inline$1","limitShift","limitShift$1","computePosition","computePosition$1","detectOverflow","offset","round","createCoords","max","min","floor","getComputedStyle","isHTMLElement","isElement","getWindow","isWebKit","getDocumentElement","getNodeName","isOverflowElement","getNodeScroll","getOverflowAncestors","getParentNode","isLastTraversableNode","isContainingBlock","isTableElement","getContainingBlock","getCssDimensions","element","css","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","contextElement","getScale","domElement","rect","getBoundingClientRect","x","y","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","left","top","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","floating","some","selector","matches","e","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","elements","strategy","documentElement","topLayer","scroll","scrollLeft","scrollTop","offsets","isOffsetParentAnElement","offsetRect","getClientRects","Array","from","getWindowScrollBarX","getDocumentRect","html","body","ownerDocument","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","parentNode","position","getClippingElementAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","includes","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","concat","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","data","getOffsetParentFn","getDimensionsFn","reference","isRTL","platform","observeMove","onMove","io","timeoutId","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","options","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","Map","mergedOptions","platformWithCache"],"sources":["F:/Uni/chemotherapy-management-system/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}